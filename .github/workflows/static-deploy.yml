name: Deploy Static Site to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy static site
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Configure environment variables
        env:
          GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
        run: |
          echo "🔧 Configuring static site with environment variables..."

          # Get the measurement ID
          MEASUREMENT_ID="${GA_MEASUREMENT_ID:-}"

          if [ -z "$MEASUREMENT_ID" ]; then
            echo "⚠️  GA_MEASUREMENT_ID not found in secrets. Analytics will be disabled."
            MEASUREMENT_ID=""
          else
            echo "✅ Using Analytics Measurement ID: ${MEASUREMENT_ID:0:5}***"
          fi

          # Create runtime configuration file
          cat > runtime-config.js << EOF
          // Runtime Configuration (Generated during deployment)
          window.RUNTIME_CONFIG = {
            GA_MEASUREMENT_ID: "$MEASUREMENT_ID",
            BUILD_TIME: "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            ENVIRONMENT: "production",
            VERSION: "2.0.0"
          };

          console.log("🏗️  Runtime config loaded:", window.RUNTIME_CONFIG);
          EOF

          echo "✅ Created runtime configuration"

      - name: Validate static site
        run: |
          echo "🔍 Validating static site files..."
          echo ""
          echo "📁 Directory contents:"
          ls -la

          echo ""
          echo "📋 Essential files check:"

          # Check for required files
          REQUIRED_FILES="index.html styles.css app.js"
          for file in $REQUIRED_FILES; do
            if [ -f "$file" ]; then
              SIZE=$(du -h "$file" | cut -f1)
              echo "✅ $file exists ($SIZE)"
            else
              echo "❌ $file missing - deployment will fail"
              exit 1
            fi
          done

          # Check for optional but important files
          OPTIONAL_FILES="analytics.js config.js responsive-enhancements.js"
          for file in $OPTIONAL_FILES; do
            if [ -f "$file" ]; then
              SIZE=$(du -h "$file" | cut -f1)
              echo "✅ $file exists ($SIZE)"
            else
              echo "ℹ️  $file not found (optional)"
            fi
          done

          # Check if runtime configuration was created
          if [ -f "runtime-config.js" ]; then
            echo "✅ Runtime configuration created"
          fi

          # Validate HTML structure
          if grep -q "<!DOCTYPE html>" index.html && grep -q "</html>" index.html; then
            echo "✅ HTML structure is valid"
          else
            echo "⚠️  HTML structure may be incomplete"
          fi

          # Check for responsive meta tag
          if grep -q 'name="viewport"' index.html; then
            echo "✅ Responsive viewport meta tag found"
          else
            echo "⚠️  Viewport meta tag missing - mobile experience may be poor"
          fi

          # Check for CSS and JS references
          if grep -q 'styles.css' index.html; then
            echo "✅ CSS file referenced in HTML"
          else
            echo "❌ CSS file not referenced in HTML"
          fi

          if grep -q 'app.js' index.html; then
            echo "✅ Main JavaScript file referenced in HTML"
          else
            echo "❌ Main JavaScript file not referenced in HTML"
          fi

          echo ""
          echo "🎯 Static site validation completed!"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deployment summary
        run: |
          echo "🚀 Static site deployment completed successfully!"
          echo ""
          echo "🔗 Your TV Show Search App is now live at:"
          echo "   ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "📊 Features deployed:"
          echo "  ✅ TV Show Search with TVMaze API"
          echo "  ✅ Responsive design for all devices"
          echo "  ✅ Touch-friendly mobile interface"
          echo "  ✅ Channel/Network filtering"
          echo "  ✅ Favorites system with persistence"
          echo "  ✅ Keyboard shortcuts"
          echo "  ✅ Modern minimalist UI"
          echo "  ✅ Performance optimizations"
          echo "  ✅ Accessibility features"
          if [ -n "${{ secrets.GA_MEASUREMENT_ID }}" ]; then
            echo "  ✅ Google Analytics integration"
          else
            echo "  ℹ️  Analytics disabled (no measurement ID)"
          fi
          echo ""
          echo "🧪 Next steps:"
          echo "  1. Visit your site and test the search functionality"
          echo "  2. Try the responsive design on different devices"
          echo "  3. Test the channel filtering features"
          echo "  4. Check mobile touch interactions"
          echo "  5. Verify favorites persistence"
          echo ""
          echo "🐛 If you encounter issues:"
          echo "  1. Check the browser console for errors"
          echo "  2. Verify the TVMaze API is accessible"
          echo "  3. Test on different browsers and devices"
          echo "  4. Review the responsive implementation guide"
