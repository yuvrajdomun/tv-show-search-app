name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --only=production || npm install --only=production

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with environment variables
        env:
          GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
        run: |
          # Create a temporary script to inject environment variables
          cat > inject-env.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          
          // Read the measurement ID from environment
          const measurementId = process.env.GA_MEASUREMENT_ID || '';
          
          if (!measurementId) {
            console.warn('⚠️  GA_MEASUREMENT_ID not found in secrets. Analytics will be disabled.');
          } else {
            console.log('✅ Injecting Analytics Measurement ID:', measurementId.substring(0, 5) + '***');
          }
          
          // Files to process
          const filesToProcess = [
            'index.html',
            'config.js'
          ];
          
          filesToProcess.forEach(filename => {
            if (fs.existsSync(filename)) {
              let content = fs.readFileSync(filename, 'utf8');
              
              // Replace placeholders with actual values
              content = content.replace(/GA_MEASUREMENT_ID/g, measurementId);
              content = content.replace(/\{\{GA_MEASUREMENT_ID\}\}/g, measurementId);
              
              // Write the updated content back
              fs.writeFileSync(filename, content);
              console.log(`✅ Updated ${filename} with environment variables`);
            }
          });
          
          // Create a runtime configuration file
          const runtimeConfig = {
            GA_MEASUREMENT_ID: measurementId,
            BUILD_TIME: new Date().toISOString(),
            ENVIRONMENT: 'production'
          };
          
          fs.writeFileSync('runtime-config.js', 
            `window.RUNTIME_CONFIG = ${JSON.stringify(runtimeConfig, null, 2)};`
          );
          
          console.log('✅ Created runtime configuration');
          EOF
          
          # Run the injection script
          node inject-env.js

      - name: Validate build
        run: |
          echo "🔍 Validating build files..."
          ls -la
          
          # Check if analytics ID was injected
          if grep -q "G-" index.html; then
            echo "✅ Analytics ID found in index.html"
          else
            echo "⚠️  No analytics ID found in index.html"
          fi
          
          # Validate HTML
          if command -v html5validator &> /dev/null; then
            html5validator --root . --ignore-re "Attribute .* not allowed"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deployment validation
        run: |
          echo "🚀 Deployment completed!"
          echo "📊 Analytics should be active with ID: G-***"
          echo "🔗 Site URL: ${{ steps.deployment.outputs.page_url }}" 